// coding: utf-8
/* Copyright (c) 2013, Roboterclub Aachen e.V.
 * All Rights Reserved.
 *
 * The file is part of the xpcc library and is released under the 3-clause BSD
 * license. See the file `LICENSE` for the full license governing this code.
 */
// ----------------------------------------------------------------------------

#include "uart_simple_spi_{{id}}.hpp"

bool xpcc::stm32::UartSpiSimpleMaster{{ id }}::finished = true;
xpcc::stm32::UartSpiSimpleMaster{{ id }}::DataOrder
	xpcc::stm32::UartSpiSimpleMaster{{ id }}::dataOrder =
	xpcc::stm32::UartSpiSimpleMaster{{ id }}::DataOrder::MsbFirst;

// ----------------------------------------------------------------------------
bool
xpcc::stm32::UartSpiSimpleMaster{{ id }}::transfer(uint8_t *tx, uint8_t *rx,
		std::size_t length)
{
	if (!isFinished())
		return false;

	finished = false;

	uint_fast8_t tx_byte = 0xff;
	uint_fast8_t rx_byte;

	for (std::size_t i = 0; i < length; i++)
	{
		if (tx) tx_byte = tx[i];

		rx_byte = writeReadBlocking(tx_byte);

		if (rx) rx[i] = rx_byte;
	}

	finished = true;
	return true;
}
